{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ2: –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ—Ä–æ–¥–Ω–æ–≥–æ –ª–∏–Ω–µ–π–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏\n",
    "\n",
    "–í—ã–ø–æ–ª–Ω–∏–ª —Å—Ç—É–¥–µ–Ω—Ç –≥—Ä. 9381 –•–∞–º–∏–¥–æ–≤ –ú–∞–∫—Å—É–¥, –≤–∞—Ä–∏–∞–Ω—Ç 15."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## –¶–µ–ª—å —Ä–∞–±–æ—Ç—ã\n",
    "\n",
    "–ò–∑—É—á–µ–Ω–∏–µ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –æ–¥–Ω–æ—Ä–æ–¥–Ω–æ–≥–æ –ª–∏–Ω–µ–π–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏ –ø—Ä–∏ $t \\longrightarrow +\\infty$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è\n",
    "\n",
    "C–∏—Å—Ç–µ–º–∞ –ª–∏–Ω–µ–π–Ω—ã—Ö –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–∏–¥–∞:\n",
    "\n",
    "#### $$X' = A(t)X,$$\n",
    "–≥–¥–µ $$A_{i,j}(t + T) = A_{i,j}(t) \\; \\forall t \\ge 0$$\n",
    "\n",
    "–Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–æ–π –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã—Ö –ª–∏–Ω–µ–π–Ω—ã—Ö –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π —Å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏.\n",
    "\n",
    "–ó–¥–µ—Å—å $T > 0$ - –ø–µ—Ä–∏–æ–¥ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã $a_{i,j}$\n",
    "\n",
    "–§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –º–∞—Ç—Ä–∏—Ü–µ–π —Å–∏—Å—Ç–µ–º—ã (1) –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–∞–∫–∞—è –º–∞—Ç—Ä–∏—Ü–∞ $\\Phi(t)$, —á—Ç–æ –µ–µ —Å—Ç–æ–±—Ü—ã —è–≤–ª—è—é—Ç—Å—è –ª–∏–Ω–µ–π–Ω–æ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–µ–π —Ä–µ—à–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã $X' = A(t)X$.\n",
    "\n",
    "–û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ç—Ä–∏—Ü–µ–π –¥–ª—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã $\\Phi(t)$ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–∞–∫–∞—è –º–∞—Ç—Ä–∏—Ü–∞ $C$, —á—Ç–æ\n",
    "\n",
    "#### $$\\Phi(t + T) = \\Phi(t)C, \\; \\forall t \\ge 0$$.\n",
    "\n",
    "–°–ø–µ–∫—Ç—Ä–∞–ª—å–Ω—ã–º —Ä–∞–¥–∏—É—Å–æ–º –º–∞—Ç—Ä–∏—Ü—ã $C$ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —á–∏—Å–ª–æ:\n",
    "\n",
    "#### $$r(C) = \\max\\limits_{i}|\\lambda_i|,$$\n",
    "\n",
    "–≥–¥–µ $\\lambda_i$ - —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –º–∞—Ç—Ä–∏—Ü—ã $C$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏\n",
    "\n",
    "–î–∞–Ω–æ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ:\n",
    "\n",
    "$$ x'' + a(p,t)x = 0, \\;\\; a(p,t) = p + b(t), \\;\\; b(t + T) = b(t), $$\n",
    "\n",
    "–≥–¥–µ $p$ - –ø–∞—Ä–∞–º–µ—Ç—Ä.\n",
    "\n",
    "–î–∞–Ω–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–≤–æ–¥–∏—Ç—Å—è –∫ —Å–∏—Å—Ç–µ–º–µ –¥–≤—É—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π I-–≥–æ –ø–æ—Ä—è–¥–∫–∞:\n",
    "\n",
    "$$\n",
    "\\begin{cases}\n",
    "    u'_1 = u_2, \\\\\n",
    "    u'_2 = -a(p,t)u_1;\n",
    "\\end{cases}\n",
    "\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\; (1)\n",
    "$$\n",
    "\n",
    "–ó–¥–µ—Å—å $u_1(t) = x(t), \\; u_2(t) = x'(t)$.\n",
    "\n",
    "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –æ–¥–Ω–æ—Ä–æ–¥–Ω–æ–≥–æ –ª–∏–Ω–µ–π–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è. –î–∞–ª—å–Ω–µ–π—à–∏–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–∏–º—ã –∫ –ª—é–±–æ–π –ª–∏–Ω–µ–π–Ω–æ–π –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –∫ —Å–∏—Å—Ç–µ–º–µ –≤–∏–¥–∞ $(1)$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## –°—Ö–µ–º–∞ —Ä–µ—à–µ–Ω–∏—è\n",
    "\n",
    "_1. –ó–∞–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ $p$. –ù–∞–ø—Ä–∏–º–µ—Ä, $p$ –º–µ–Ω—è–µ—Ç—Å—è –æ—Ç $0.1$ –¥–æ $5$ —Å —à–∞–≥–æ–º $0.05$. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è $p$ –ø—Ä–æ–¥–µ–ª–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è ( –≤ —Ç–µ–ª–µ —Ü–∏–∫–ª–∞)._\n",
    "\n",
    "_2. –í—ã—á–∏—Å–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã —Å–∏—Å—Ç–µ–º—ã $(1)$ –ø—Ä–∏ $t = T$ —Å –ø–æ–º–æ—â—å—é –ª—é–±–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏\n",
    "–ö–æ—à–∏.\n",
    "–î–ª—è —ç—Ç–æ–≥–æ —Ä–µ—à–∞–µ–º –¥–≤–µ –∑–∞–¥–∞—á–∏ –ö–æ—à–∏ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –≤–µ–∫—Ç–æ—Ä–∞–º–∏ $V_1 = (1, 0)^T$ –∏ $V_2 = (0, 1)^T$ –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ $[0, T]$. –ü—É—Å—Ç—å –≤–µ–∫—Ç–æ—Ä-—Ñ—É–Ω–∫—Ü–∏–∏ $U(t, V_1), \\; U(t, V_2)$ ‚Äì —Ä–µ—à–µ–Ω–∏—è —ç—Ç–∏—Ö –∑–∞–¥–∞—á. –û–Ω–∏ —è–≤–ª—è—é—Ç—Å—è —Å—Ç–æ–ª–±—Ü–∞–º–∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã $\\Phi(t)$, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–µ–π —É—Å–ª–æ–≤–∏—é $\\Phi(0) = E$. –û—Å–Ω–æ–≤–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É $C$ –¥–ª—è $\\Phi(t)$ –ø–æ–ª—É—á–∞–µ–º –∏–∑ —Ñ–æ—Ä–º—É–ª—ã $C = \\Phi(T)$.\n",
    "–°—Ç–æ–ª–±—Ü—ã –º–∞—Ç—Ä–∏—Ü—ã $C$ —ç—Ç–æ –≤–µ–∫—Ç–æ—Ä—ã $U(T, V_1), U(T, V_2)$;_\n",
    "\n",
    "_3. –í—ã—á–∏—Å–ª—è–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –º–∞—Ç—Ä–∏—Ü—ã ùê∂ –∏ –µ–µ —Å–ø–µ–∫—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–∞–¥–∏—É—Å, —Ç.–µ.\n",
    "$$ r(p) = \\max\\limits_{j = 1,2}|\\lambda_j|.$$\n",
    "–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∏–º–µ–µ–º –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π $r(p)$;_\n",
    "\n",
    "_4. –í—ã–≤–æ–¥ –æ–± —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏–ª–∏ –Ω–µ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –¥–µ–ª–∞–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è $r(p)$._\n",
    "\n",
    "_–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ —ç—Ç–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–æ—á–∫—É ùëù0, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–∑–¥–µ–ª—è–µ—Ç –∑–æ–Ω—ã —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ –Ω–µ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö $r \\le 1$ –∏ $r \\gt 1$. –ë–æ–ª–µ–µ —Ç–æ—á–Ω–æ\n",
    "–≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –º–µ—Ç–æ–¥–æ–º –ø–æ–ª–æ–≤–∏–Ω–Ω–æ–≥–æ –¥–µ–ª–µ–Ω–∏—è._\n",
    "\n",
    "_–ú–∞—Ç—Ä–∏—Ü—É $C$ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–æ, —Ä–µ—à–∞—è —á–∏—Å–ª–µ–Ω–Ω–æ –¥–≤–µ –∑–∞–¥–∞—á–∏ –ö–æ—à–∏._"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã\n",
    "\n",
    "\n",
    "*$b(t) = \\displaystyle{cos\\;sin\\;3t}\\;$*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pylab as pl\n",
    "import scipy.integrate as si\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import math"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "def b(t):\n",
    "    return math.cos(math.sin(3*t))\n",
    "\n",
    "def f(u, t):\n",
    "    return [u[1], -(p + b(t))*u[0]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "V1 = [1, 0]\n",
    "V2 = [0, 1] \n",
    "t = pl.linspace(0, 2*math.pi/3, 10000) \n",
    "P, R = [], []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "for p in np.arange(0.1, 10.05, 0.05):\n",
    "    P.append(p)\n",
    "    solve_1 = si.odeint(f, V1, t)\n",
    "    solve_2 = si.odeint(f, V2, t)\n",
    "    C = np.transpose(np.array([solve_1[-1], solve_2[-1]]))\n",
    "    R.append(max(abs(np.linalg.eig(C)[0])))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "–ú–µ—Ç–æ–¥–æ–º –ø–æ–ª–æ–≤–∏–Ω–Ω–æ–≥–æ –¥–µ–ª–µ–Ω–∏—è –Ω–∞–π–¥–µ–º —Ç–æ—á–∫—É $p_0$, —Ä–∞–∑–¥–µ–ª—è—é—â—É—é –∑–æ–Ω—ã —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ –Ω–µ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é $\\varepsilon=10^{-3}$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "p0 = 8.350000000000003, r(p0) = 0.9999999307508021\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXQAAAD4CAYAAAD8Zh1EAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8vihELAAAACXBIWXMAAAsTAAALEwEAmpwYAAATgklEQVR4nO3df4xd9Znf8fdjxsg/sSlORoRxGUemwJolhvEGUpvaTqoGQrO0FRtKG4cQbLMku8VhUaFVVP7Y/NFoU5YlLaA0EIgabFUGBUoS6CaZqRVtfpmskzV2AxZkzQSKiQ2YcTQC46d/zAWNzczcez33zvV8z/slHc3c+/36nOeZO/74+Nxzz4nMRJI0/c3odAGSpNYw0CWpEAa6JBXCQJekQhjoklSIrk5teNGiRdnb29vw/EOHDjF37tz2FXSCqmLfVewZqtl3FXuGyfX95JNP/jYz3zPWWMcCvbe3l+3btzc8f2BggDVr1rSvoBNUFfuuYs9Qzb6r2DNMru+I+PvxxjzkIkmFMNAlqRAGuiQVomPH0CWpVd58800GBwcZHh7udCkNWbBgAbt3755wzqxZs+jp6WHmzJkNr9dAlzTtDQ4OMn/+fHp7e4mITpdT1+uvv878+fPHHc9M9u/fz+DgIEuWLGl4vXUPuUTE4ojoj4jdEfFURNw4xpyIiDsjYk9E/DIiLmy4AkmapOHhYU477bRpEeaNiAhOO+20pv/H0cge+mHgzzLz5xExH3gyIv46M3eNmnMZcFZtuQi4u/ZVkqZEKWH+tuPpp+4eema+mJk/r33/OrAbOOOYaVcA38gRPwYWRsTpTVcjSWPZtGlk0YSaOoYeEb3ABcBPjhk6A3h+1OPB2nMvHvPnNwIbAbq7uxkYGGh420NDQ03NL0UV+65iz1DNvhvteXltzo5x5i5YsIDXX3+9dYW1QGby8Y9/nAcffJBTTjnlqLG33nrrnXo//elP84UvfIGlS5e+ax3Dw8PN/U5kZkMLMA94EvhXY4x9G1g16vH3gb6J1tfX15fN6O/vb2p+KarYdxV7zqxm3w33vHr1yDKOXbt2taKcljly5Eg+9thjuWnTpjHHDx48+M73AwMDuX79+jHnjdUXsD3HydWGzkOPiJnAQ8A3M/PhMaYMAotHPe4BXmj8nxVJmt5+/etfc+655/LZz36WCy+8kC9/+ctcccUV74ydc845XHPNNZx//vmsW7eO3/3udwBccsklfO973+Pw4cOTrqHuIZcYOTJ/L7A7M28fZ9qjwJ9ExBZG3gx9LTNfHGeuJLXNpk2b2LFjR0vXuXz5cu6444668371q1/x9a9/nbvuuoszzzyTvr6+o8buvfdeVq5cybp167jrrru4+eabmTFjBkuXLuUXv/jFUfOPRyN76CuBdcCHI2JHbflYRPxxRPxxbc53gGeBPcB/Bz47qaokaRo688wzufjiiwE4cODAUeeaL168mJUrVwJw1VVX8cMf/vCdsfe+97288MLkD2rU3UPPzB8CE54/Uzuu87lJVyNJk9TInnS7jL4kbldXF0eOHGHGjJH95mNPQxz9eHh4mNmzZ096+17LRZLa4Oyzz+bZZ5995/HevXv50Y9+BMDWrVtZtWrVO2NPP/00y5Ytm/Q2DXRJaoPLL7/8qFMOzz33XB544AHOP/98XnnlFW644QYAXnrpJWbPns3pp0/+oztey0WSWqC3t5edO3e+83j9+vV86lOfYv369QDMmDGDe+65Bxi5lsucOXMAePDBB7n++utbUoOBLkltcPrpp7NhwwYOHjw44byFCxeybt26lmzTQJekNvnEJz4BwCmnnHLU3vto1157bcu25zF0SSqEgS5JhTDQJakQBrokFcJAl6Q2eu6557jooos466yzuOqqq3jjjTfati0DXZLa6JZbbuHzn/88zzzzDKeeeir33ntv27ZloEtSCxx7idwrr7ySQ4cO8YMf/IArr7wSgGuuuYZvfetbbavB89AllWXTJmjx5XNZvhwavHzu25fI/cxnPsPdd9/NwoUL6eoaidqenh5+85vftLa2UdxDl6QWGX2J3E9+8pP09/e/a047b2btHrqksnTw8rnHhvXJJ5/Mq6++yuHDh+nq6mJwcJD3ve99bdu+e+iS1CKjL5G7efNmVq1axdq1a9m6dSsADzzwwDu3pWsHA12SWmT0JXIPHDjADTfcwJe+9CVuv/12li5dyv79+7nuuuvatn0PuUhSi4y+RO7b3v/+9/PTn/70qOfadS66e+iSVAgDXZJa4NgbXHSCgS6pCCP3qi/H8fRjoEua9mbNmsX+/fuLCfXMZP/+/cyaNaupP+ebopKmvZ6eHgYHB3n55Zc7XUpDhoeH64b1rFmz6OnpaWq9BrqkaW/mzJksWbKk02U0bGBg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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "P0 = -1\n",
    "rP0 = -1\n",
    "\n",
    "for i in range(1, len(R)):\n",
    "    if abs(R[-i] - 1) > 0.001:\n",
    "        P0 = P[-i + 1]\n",
    "        rP0 = R[-i + 1]\n",
    "        break\n",
    "\n",
    "print(\"p0 = {}, r(p0) = {}\".format(P0, rP0))\n",
    "\n",
    "plt.plot(P, R, color=\"black\", label=\"r(p)\")\n",
    "plt.grid(True)\n",
    "plt.plot([P0, P0], [1, 2], color=\"red\", label=\"p0\")\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n",
    "–ì—Ä–∞–Ω–∏—Ü–∞ –º–µ–∂–¥—É –∑–æ–Ω–∞–º–∏ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ –Ω–µ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω–∞ –∏ —Ä–∞–≤–Ω–∞ $p_0 \\approx 8,35$. –ü—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏—è—Ö $p_0$ –Ω–∞–±–ª—é–¥–∞—é—Ç—Å—è –æ–±–ª–∞—Å—Ç–∏ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º $r(p) > 1$. –ü—Ä–∏ —Ç–∞–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö $p$ –ø–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ —á–∞—Å—Ç—å —Ä–µ—à–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ –∏ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —É—Å—Ç–æ–π—á–∏–≤–∞. –ü—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏—è—Ö $p >= p_0$ –≤—Å–µ —Ä–µ—à–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã –∏ —Å–∏—Å—Ç–µ–º–∞ —É—Å—Ç–æ–π—á–∏–≤–∞."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## –í—ã–≤–æ–¥—ã\n",
    "\n",
    "–í —Ö–æ–¥–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã –±—ã–ª–∞ –∏–∑—É—á–µ–Ω–∞ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –æ–¥–Ω–æ—Ä–æ–¥–Ω–æ–≥–æ –ª–∏–Ω–µ–π–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏ –ø—Ä–∏ $t \\longrightarrow +\\infty$"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
